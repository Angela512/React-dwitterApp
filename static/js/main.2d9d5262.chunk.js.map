{"version":3,"sources":["components/AuthForm.js","routes/Auth.js","firebase.js","components/Dweet.js","components/DweetForm.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["AuthForm","useState","email","setEmail","password","setPW","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","auth","getAuth","createUserWithEmailAndPassword","then","userCredential","user","console","log","catch","message","signInWithEmailAndPassword","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","a","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","dbService","firestore","storageService","storage","Dweet","dweetObj","isOwner","editing","setEditing","text","newDweet","setNewDweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","fileUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","DweetForm","userObj","dweet","setDweet","attachment","setAttachment","getStorage","fileRef","ref","uid","uuidv4","uploadString","uploadFile","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","opacity","backgroundImage","faTimes","Home","dweets","setDweets","useEffect","orderBy","onSnapshot","snapshot","dweetArray","docs","map","marginTop","refreshUser","navigate","useNavigate","displayName","newDisplayName","setNewDisplayName","getMyDweets","where","get","updateProfile","currentUser","signOut","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","element","Profile","App","init","setInit","setUserObj","onAuthStateChanged","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d9d5262.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword} from 'firebase/auth';\r\n\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPW] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const auth = getAuth();\r\n        if(newAccount){\r\n            createUserWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                const user = userCredential.user;\r\n                console.log(user);\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message)\r\n            });\r\n        } else{\r\n            signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                const user = userCredential.user;\r\n                console.log(user);\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message)\r\n            });\r\n        }\r\n        \r\n        /*\r\n        try{\r\n            const auth = getAuth();\r\n            let data;\r\n            if(newAccount){\r\n                data = await createUserWithEmailAndPassword( email, password);\r\n            } else{\r\n                data = await signInWithEmailAndPassword( email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(e){\r\n            const errorCode = e.code;\r\n            const errorMessage = e.message;\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        }\r\n        */\r\n    }\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        } else if(name === \"password\"){\r\n            setPW(value);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n                <input className=\"authInput\" name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\r\n                <input className=\"authInput\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\r\n                <input className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span className=\"authSwitch\" onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport {getAuth, signInWithPopup, GithubAuthProvider, GoogleAuthProvider } from 'firebase/auth';\r\nimport AuthForm from '../components/AuthForm';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {   \r\n    const onSocialClick = async(event) => {\r\n        const auth = getAuth();\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new GoogleAuthProvider();\r\n        } else if(name === \"github\"){\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        const data = await signInWithPopup(auth, provider);\r\n        console.log(data);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button name=\"google\" className=\"authBtn\" onClick={onSocialClick}>\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button name=\"github\" className=\"authBtn\" onClick={onSocialClick}>\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth; ","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC5qqVA2DTNqZ2IxhWDmkV6rVcyfN6s-nY\",\r\n  authDomain: \"dwitter-e2c6a.firebaseapp.com\",\r\n  projectId: \"dwitter-e2c6a\",\r\n  storageBucket: \"dwitter-e2c6a.appspot.com\",\r\n  messagingSenderId: \"801227193688\",\r\n  appId: \"1:801227193688:web:d9111f5a0b4084c68fb92d\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { dbService, storageService } from '../firebase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Dweet = ({ dweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false); //edit모드인지 아닌지 return\r\n    const [newDweet, setNewDweet] = useState(dweetObj.text);\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this dweet?\");\r\n        if(ok){\r\n            await dbService.doc(`dweets/${dweetObj.id}`).delete();\r\n            await storageService.refFromURL(dweetObj.fileUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        dbService.doc(`dweets/${dweetObj.id}`).update({\r\n            text:newDweet\r\n        })\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => { //editing하는걸 볼 수가 없으니까\r\n        const{\r\n            target: {value},\r\n        } = event;\r\n        setNewDweet(value);\r\n    };\r\n    \r\n\r\n    return (\r\n    <div className=\"dweet\">{\r\n        editing ? (\r\n            <>\r\n        <form onSubmit={onSubmit} className=\"container dweetEdit\">\r\n            <input className=\"formInput\"\r\n            type=\"text\"\r\n            placeholder=\"Edit your Dweet\" \r\n            value={newDweet} \r\n            onChange={onChange}\r\n            autoFocus\r\n            required />\r\n            <input className=\"formBtn\" type=\"submit\" value=\"Update Dweet\" />\r\n        </form>\r\n        <span className=\"formBtn calcelBtn\" onClick={toggleEditing}>Cancel</span>\r\n        </>\r\n         ) : (\r\n            <>\r\n            <h4>{dweetObj.text}</h4>\r\n            {dweetObj.fileUrl && <img src={dweetObj.fileUrl} /> }\r\n            {isOwner && (\r\n                <div class=\"dweet__actions\">\r\n                    <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </span>\r\n                </div>\r\n            )}\r\n            </>\r\n        )}\r\n    </div>\r\n);\r\n        };\r\nexport default Dweet;","import React, {useState} from 'react';\r\nimport { dbService } from '../firebase';\r\nimport {ref, getStorage, uploadString, getDownloadURL} from 'firebase/storage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst DweetForm = ({userObj}) => {\r\n    const [dweet, setDweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async(event) => {\r\n        if(dweet === \"\"){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let fileUrl = \"\";\r\n        if(attachment !== \"\") { //사진 첨부 안하면 fileUrl없으니까\r\n            const storage = getStorage();\r\n            if(attachment !== \"\"){\r\n                //파일 경로 참조 만들기\r\n                const fileRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n                //storage 참조 경로로 파일 업로드하기\r\n                const uploadFile = await uploadString(fileRef, attachment, \"data_url\");\r\n                console.log(uploadFile);\r\n                //storage에 있는 파일 url로 다운받기\r\n                fileUrl = await getDownloadURL(uploadFile.ref);\r\n            }\r\n        }\r\n        const dweetObj = {\r\n            text: dweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            fileUrl\r\n        };\r\n       \r\n        await dbService.collection(\"dweets\").add(dweetObj);\r\n        setDweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const{\r\n            target: {value},\r\n        } = event; //event안에 있는 target안에 있는 value를 줘\r\n        setDweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearPhoto = () => setAttachment(\"\");\r\n    return(\r\n        <form className=\"factoryForm\" onSubmit={onSubmit}>\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                className=\"factoryInput__input\"\r\n                value={dweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n\r\n            <input id=\"attach-file\" \r\n            type=\"file\" \r\n            onChange={onFileChange} \r\n            accept=\"image/*\" \r\n            style={{\r\n                opacity: 0,\r\n            }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img src={attachment}\r\n                    style={{\r\n                        backgroundImage: attachment,\r\n                    }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearPhoto}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n}\r\nexport default DweetForm;","import React, {useEffect, useState} from 'react';\r\nimport { dbService } from '../firebase';\r\nimport Dweet from '../components/Dweet';\r\nimport DweetForm from '../components/DweetForm';\r\n\r\nconst Home = ({userObj}) => {\r\n    const [dweets, setDweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"dweets\").orderBy(\"createdAt\",\"desc\").onSnapshot((snapshot) => {\r\n            const dweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id, \r\n                ...doc.data(),\r\n            }));\r\n            setDweets(dweetArray);\r\n        });\r\n    }, []);\r\n    \r\n\r\n    return ( //attach가 있을때만 img띄움\r\n        <div className=\"container\">\r\n            <DweetForm userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {dweets.map(dweet => (\r\n                <Dweet key={dweet.id} \r\n                dweetObj={dweet} \r\n                isOwner={dweet.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport {getAuth, updateProfile} from 'firebase/auth';\r\nimport { authService, dbService } from '../firebase';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default({refreshUser, userObj}) => {\r\n    const auth = getAuth();\r\n    const navigate = useNavigate();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        refreshUser();\r\n        navigate(\"/\");\r\n    };\r\n    const getMyDweets = async() => {\r\n        const dweets = await dbService\r\n        .collection(\"dweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createdAt\")\r\n        .get();\r\n        console.log(dweets.docs.map((doc) => doc.data()));\r\n        console.log(userObj);\r\n    }\r\n    useEffect(() => {\r\n        getMyDweets();\r\n    }, []);\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await updateProfile(auth.currentUser,{\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <form className=\"profileForm\" onSubmit={onSubmit}>\r\n                <input className=\"formInput\"\r\n                onChange={onChange} \r\n                type=\"text\" \r\n                placeholder=\"Display Name\" \r\n                autoFocus\r\n                value={newDisplayName} />\r\n                <input className=\"formBtn\"\r\n                type=\"submit\" \r\n                value=\"Update Profile\" \r\n                style={{\r\n                    marginTop: 10,\r\n                 }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ( {userObj} ) => (\r\n<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n        <Link to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName === null ? \"My Profile\" : `${userObj.displayName}'s Profile`}\r\n          </span>\r\n        </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\n\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Routes, Route} from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Profile from '../routes/Profile';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <div\r\n                    style={{\r\n                    maxWidth: 890,\r\n                    width: \"100%\",\r\n                    margin: \"0 auto\",\r\n                    marginTop: 80,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    }}\r\n                >\r\n            <Routes>\r\n                {isLoggedIn ? (\r\n                <>\r\n                <Route exact path=\"/\" element={<Home userObj={userObj} />}></Route>\r\n                <Route exact path=\"/profile\" element={<Profile userObj={userObj} refreshUser={refreshUser} />}></Route>\r\n                \r\n                </>\r\n                ) : (\r\n                <>\r\n                <Route exact path=\"/\" element={<Auth />}></Route>\r\n                </>\r\n                )}\r\n                \r\n            </Routes>\r\n            </div>\r\n        </Router>\r\n    )\r\n};\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\nimport AppRouter from './Router';\nimport {getAuth, onAuthStateChanged, updateProfile} from 'firebase/auth';\n\nfunction App() {\n  const [init, setInit] = useState(false); //아직 초기화되지 않음\n  const [userObj, setUserObj] = useState(null);\n  const auth = getAuth();\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if(user) {\n        \n          setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => updateProfile(user, {\n            displayName: user.displayName,\n          }),\n        });\n \n          \n        console.log(user);\n        console.log(userObj);\n        \n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = auth.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => updateProfile(user, {\n        displayName: user.displayName,\n      }),\n    });\n  };\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}